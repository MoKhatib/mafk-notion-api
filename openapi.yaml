openapi: 3.1.0
info:
  title: "MAFK Notion API"
  version: "4.1"
  description: "Creative orchestration API powering MAFKâ€™s intelligent Notion system"

servers:
  - url: "https://mafk-notion-api.onrender.com"

paths:

  /projects:
    get:
      summary: "List all projects"
      operationId: getProjects
      responses:
        "200":
          description: "Returns a list of all projects"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

    post:
      summary: "Create a new Notion project"
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [Project name, Status]
              properties:
                Project name:
                  type: string
                  description: "Title of the project"
                Status:
                  type: string
                  description: "Project status (e.g. Planning, In Progress)"
                Client:
                  type: array
                  items:
                    type: string
                  description: "Client tags (must match Notion select values)"
                Description:
                  type: string
                Owner:
                  type: string
                  description: "User ID of the project owner"
                Deadline:
                  type: string
                  format: date

      responses:
        "200":
          description: "Project created successfully"

  /projects/{id}:
    patch:
      summary: "Update project metadata"
      operationId: updateProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Status:
                  type: string
                Deadline:
                  type: string
                  format: date
                Description:
                  type: string
                Owner:
                  type: string
                Client:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: "Project updated successfully"

  /projects/{id}/generate-sprint-from-goal:
    post:
      summary: "Generate sprint tasks from a creative goal"
      operationId: generateSprintFromGoal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [goal]
              properties:
                goal:
                  type: string
      responses:
        "200":
          description: "Sprint tasks generated"

  /projects/{id}/sprint:
    post:
      summary: "Create a sprint"
      operationId: createSprint
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tasks]
              properties:
                tasks:
                  type: array
                  items:
                    type: string
                days:
                  type: integer
                startDate:
                  type: string
                  format: date
      responses:
        "200":
          description: "Sprint created"

  /projects/{id}/daily-reflection:
    post:
      summary: "Insert daily reflection toggle"
      operationId: insertDailyReflection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Reflection block created"

  /projects/{id}/embed-summary:
    post:
      summary: "Embed project summary block"
      operationId: embedProjectSummary
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                summary:
                  type: string
                goals:
                  type: string
                ideas:
                  type: string
      responses:
        "200":
          description: "Summary embedded"

  /projects/{id}/embed-dashboard:
    post:
      summary: "Embed creative dashboard"
      operationId: embedProjectDashboard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                summary:
                  type: string
                goals:
                  type: string
                ideas:
                  type: string
                planning:
                  type: string
                rituals:
                  type: string
                prompts:
                  type: string
      responses:
        "200":
          description: "Dashboard embedded"

  /projects/{id}/embed-moodboard:
    post:
      summary: "Embed moodboard block"
      operationId: embedMoodboard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                visuals:
                  type: array
                  items:
                    type: object
                    properties:
                      img:
                        type: string
      responses:
        "200":
          description: "Moodboard embedded"

  /projects/{id}/clean-blocks:
    post:
      summary: "Detect duplicate toggle blocks"
      operationId: cleanProjectBlocks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Duplicates listed"

  /projects/{id}/visual-references:
    get:
      summary: "Get all visual references for a project"
      operationId: getProjectVisuals
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Visuals retrieved"

  /tasks:
    get:
      summary: "List all tasks"
      operationId: getTasks
      responses:
        "200":
          description: "All tasks listed"

    post:
      summary: "Create a new task"
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [Task name, Project]
              properties:
                Task name:
                  type: string
                Status:
                  type: string
                Assignee:
                  type: string
                Due:
                  type: string
                  format: date
                Priority:
                  type: string
                Project:
                  type: string
      responses:
        "200":
          description: "Task created"

  /tasks/{id}:
    patch:
      summary: "Update task metadata"
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Task name:
                  type: string
                Status:
                  type: string
                Priority:
                  type: string
                Due:
                  type: string
                  format: date
                Assignee:
                  type: string
      responses:
        "200":
          description: "Task updated"

  /tasks/{id}/status:
    patch:
      summary: "Update task status only"
      operationId: updateTaskStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [Status]
              properties:
                Status:
                  type: string
      responses:
        "200":
          description: "Status updated"

  /tasks/{id}/brief:
    post:
      summary: "Embed a creative brief in task"
      operationId: embedTaskBrief
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [brief]
              properties:
                brief:
                  type: string
      responses:
        "200":
          description: "Brief embedded"

  /tasks/this-week:
    get:
      summary: "List tasks due this week"
      operationId: getTasksThisWeek
      responses:
        "200":
          description: "Weekly tasks returned"

  /tasks/overdue:
    get:
      summary: "List overdue tasks"
      operationId: getTasksOverdue
      responses:
        "200":
          description: "Overdue tasks returned"

  /pages/{id}:
    delete:
      summary: "Archive a Notion page"
      operationId: archivePage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Page archived"

  /pages/{id}/caption-images:
    post:
      summary: "Caption images in page"
      operationId: captionImages
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Captions added"

  /visuals/{id}/tag-project:
    post:
      summary: "Tag a visual to a project"
      operationId: tagVisualToProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [projectId]
              properties:
                projectId:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: "Visual tagged"

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
          format: uri
        created_time:
          type: string
          format: date-time
        last_edited_time:
          type: string
          format: date-time
        properties:
          type: object
          properties:
            Project name:
              type: object
              properties:
                title:
                  type: array
                  items:
                    type: object
                    properties:
                      plain_text:
                        type: string
            Status:
              type: object
              properties:
                status:
                  type: object
                  properties:
                    name:
                      type: string
            Description:
              type: object
              properties:
                rich_text:
                  type: array
                  items:
                    type: object
                    properties:
                      plain_text:
                        type: string
            Owner:
              type: object
              properties:
                people:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      person:
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
